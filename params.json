{"name":"Easyspotlight","tagline":"Easy way to index content to CoreSpotlight in iOS9","body":"# EasySpotlight\r\n@felix-dumit\r\n[![CI Status](http://img.shields.io/travis/felix-dumit/EasySpotlight.svg?style=flat)](https://travis-ci.org/felix-dumit/EasySpotlight)\r\n[![Version](https://img.shields.io/cocoapods/v/EasySpotlight.svg?style=flat)](http://cocoapods.org/pods/EasySpotlight)\r\n[![License](https://img.shields.io/cocoapods/l/EasySpotlight.svg?style=flat)](http://cocoapods.org/pods/EasySpotlight)\r\n[![Platform](https://img.shields.io/cocoapods/p/EasySpotlight.svg?style=flat)](http://cocoapods.org/pods/EasySpotlight)\r\n\r\n## Usage\r\n\r\nTo run the example project, clone the repo, and run `pod install` from the Example directory first.\r\n\r\n## Requirements\r\n`CoreSpotlight` is only available in **iOS 9.0** or later \r\n## Installation\r\n\r\nEasySpotlight is available through [CocoaPods](http://cocoapods.org). To install\r\nit, simply add the following line to your Podfile:\r\n\r\n```ruby\r\npod \"EasySpotlight\"\r\n```\r\n\r\n## Saving content to Spotlight\r\n\r\nTo use simply create a struct or class that implements the `SpotlightConvertable` protocol, and you will get the methods defined in `SpotlightIndexable` for free.\r\nBoth protocols are copied **verbatum** below.\r\n\r\n```swift \r\npublic typealias SpotlightCompletion = ((NSError?) -> Void)?\r\n\r\n//methods given for free\r\npublic protocol SpotlightIndexable {\r\n    func addToSpotlightIndex(completion:SpotlightCompletion)\r\n    func removeFromSpotlightIndex(completion:SpotlightCompletion)\r\n    static func removeAllFromSpotlightIndex(completion:SpotlightCompletion)\r\n}\r\n\r\n@available(iOS 9.0, *)\r\n// implement to enable indexing methods\r\npublic protocol SpotlightConvertable:SpotlightIndexable {\r\n    var title:String? {get}\r\n    var identifier:String {get}\r\n    \r\n    //optional\r\n     var itemType:String {get}\r\n    var thumbnailImage:UIImage? {get}\r\n    func configureSearchableItem(item:CSSearchableItem)\r\n}\r\n```\r\n\r\n\r\nHere is a simple exable of a struct that implements the protocol and becomes indexable. Note also that arrays of `[SpotlightConvertable]` also conform to `SpotlightIndexable`\r\n\r\n```swift \r\nstruct SimpleStruct:SpotlightConvertable {\r\n    var title:String? = nil\r\n    var identifier:String\r\n}\r\n```\r\n\r\nYou can now use all of the following methods:\r\n\r\n```swift\r\nlet x = SimpleStruct(title:\"Bob\", identifier:\"identifier\")\r\n\r\nx.addToSpotlightIndex() { error in \r\n\t//\r\n}\r\nx.removeFromSpotlightIndex()\r\nSimpleStruct.removeAllFromSpotlightIndex()\r\n[x].addToSpotlightIndex()\r\n\r\n```\r\n\r\nIf you want to further configure the `CSSearchableItem` and `CSSearchbleAttributeItemSet` properties you can implement the `configureSeachableItem` method in the protocol.\r\n\r\n##Retrieving content\r\n\r\nIn order to easily handle when the app is opened via a spotlight search, you must implement the `SpotlightRetrievable` protocol: \r\n\r\n```swift \r\npublic protocol SpotlightRetrievable:SpotlightConvertable {\r\n    static func itemWithIdentifier(identifier: String) -> Self?\r\n}\r\n```\r\n\r\nNow you have to register a handler for that type in `application:didFinishLaunchingWithOptions:`:\r\n\r\n```swift\r\nEasySpotlight.registerIndexableHandler(SimpleStruct.self) { item in\r\n   // handle when item is opened from spotlight\r\n   assert(item is SimpleStruct)\r\n   print(\"started with: \\(item)\")\r\n}\r\n```\r\n\r\nNow all that is left is to implement the function called when the app opens from a spotlight: \r\n\r\n```swift\r\nfunc application(application: UIApplication, continueUserActivity userActivity: NSUserActivity, restorationHandler: ([AnyObject]?) -> Void) -> Bool {\r\n     return EasySpotlight.handleActivity(userActivity) || handleOtherUserActivities(userActivity)\r\n}\r\n```\r\n\r\n## Usage\r\n\r\nSee the included example application for a sample that indexes and retrieves objects from `Realm`.\r\n\r\n## Todo\r\nFind a way to add tests.\r\n\r\n## Feedback\r\nNew feature ideas, suggestions, or any general feedback is greatly appreciated.\r\n\r\n## Author\r\n\r\nFelix Dumit, felix.dumit@gmail.com\r\n\r\n## License\r\n\r\nEasySpotlight is available under the MIT license. See the LICENSE file for more info.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}